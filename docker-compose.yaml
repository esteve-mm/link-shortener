version: '3'

services:

  mariadb:
    image: mariadb:10.3
    ports:
      - '3306:3306'
    volumes:
      - C:/Users/EsteveMart√≠n/mariadb_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'shrtdb'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 'supersecret'

  monolith:
    #image: estevemartin/monolith:latest
    build:
      context: monolith
      dockerfile: Dockerfile
    depends_on:
      - mariadb
      - rabbitmq
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:mariadb://mariadb:3306/shrtdb'
      SPRING_RABBITMQ_HOST: 'rabbitmq'
    command: java -Djava.security.egd=file:/dev/./urandom -jar /app/target/shrtr-0.0.1-SNAPSHOT.jar
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 1m30s
      timeout: 10s
      retries: 3

  tests:
    build:
      context: e2e-tests
      dockerfile: Dockerfile
    depends_on:
      - monolith
    environment:
      BASE_URL: 'http://monolith:8080'

  rabbitmq:
    image: rabbitmq:3.9.13-management
    ports:
      - "5672:5672" # RabbitMq messaging
      - "15672:15672" # Management website

  mongo:
    image: mongo
    volumes:
      - ${PWD}/mongodb_data:/todo
    ports:
      - '27017:27017'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  metrics-service:
    build:
      context: metrics-service
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "dotnet", "metrics-service.dll"]
    environment:
      RabbitMQ__Host: 'rabbitmq'
      RabbitMQ__Port: '5672'
      RabbitMQ__Username: "guest"
      RabbitMQ__Password: "guest"
      MetricsService__Entities: 'User,Role,Link,LinkMetric'
      MetricsService__Events: 'Created,Updated,Deleted'
      MongoDB__ConnectionString: 'mongodb://root:example@mongo:27017/'